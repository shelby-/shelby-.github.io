// [min, max, gradientInnerRGB, gradientOuterRGB]
export const schemes = {
  popularity: [
    [-999, 10, '202,202,202', '220,230,230'],
    [11, 20, '160,225,215', '160,225,215'],
    [21, 30, '100,215,155', '200,225,220'],
    [31, 40, '0,170,160', '180,220,150'],
    [41, 50, '255,160,75', '180,220,150'],
    [51, 60, '5,115,145', '255,125,110'],
    [61, 70, '170,76,35', '255,80,110'],
    [71, 999, '190,70,180', '255,100,70']
  ],
  temp: [
    [-999, -5, '195,220,235', '170,240,240'],
    [-4, 0, '100,225,195', '215,215,215'],
    [1, 5, '0,200,225', '160,225,215'],
    [6, 10, '100,135,160', '40,220,175'],
    [11, 15, '0,170,160', '220,220,40'],
    [16, 20, '255,190,0', '255,225,20'],
    [21, 25, '255,100,25', '250,130,80'],
    [26, 30, '255,45,40', '255,125,110'],
    [31, 35, '255,60,150', '170,40,0'],
    [36, 999, '155,30,0', '255,40,70']
  ],
}

export function getSchemeBy (key, value) {
  if (!key || !value) return console.error('No key or value')
    console.log(key, value)
  const thisScheme = schemes[key].filter(scheme => {
    return scheme[0] <= value && value <= scheme[1]
  })
  return thisScheme[0] && [thisScheme[0][2], thisScheme[0][3]]
}

export default {
  getSchemeBy,
  schemes,
}
